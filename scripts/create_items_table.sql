-- Create the items table
CREATE TABLE public.items (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL DEFAULT auth.uid(),
    name text NOT NULL,
    brand text,
    category text,
    photos text[],
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Add comments to columns (optional but good practice)
COMMENT ON TABLE public.items IS 'Stores collectible items added by users.';
COMMENT ON COLUMN public.items.user_id IS 'Links to the authenticated user who owns the item.';
COMMENT ON COLUMN public.items.photos IS 'Array of URLs pointing to item images.';

-- Enable Row Level Security (RLS)
ALTER TABLE public.items ENABLE ROW LEVEL SECURITY;

-- Policy: Allow users to view their own items
CREATE POLICY "Allow individual read access"
ON public.items
FOR SELECT
USING (auth.uid() = user_id);

-- Policy: Allow users to insert their own items
CREATE POLICY "Allow individual insert access"
ON public.items
FOR INSERT
WITH CHECK (auth.uid() = user_id);

-- Policy: Allow users to update their own items
CREATE POLICY "Allow individual update access"
ON public.items
FOR UPDATE
USING (auth.uid() = user_id)
WITH CHECK (auth.uid() = user_id);

-- Policy: Allow users to delete their own items
CREATE POLICY "Allow individual delete access"
ON public.items
FOR DELETE
USING (auth.uid() = user_id);
